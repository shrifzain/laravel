name: Deploy Laravel Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to DockerHub or another registry
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t my-laravel-app .

      # Tag and push the Docker image to DockerHub
      - name: Tag Docker image
        run: |
          docker tag my-laravel-app:latest ${{ secrets.DOCKER_USERNAME }}/my-laravel-app:latest

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-laravel-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job completes successfully before deployment

    steps:
      # Set up SSH key
      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" | tr -d '\r' > private_key
          chmod 600 private_key

      # Stop current Laravel container
      - name: Stop current Laravel container
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@ec2-3-83-24-235.compute-1.amazonaws.com "docker stop laravel-app || true && docker rm laravel-app || true"

      # Pull latest Docker image
      - name: Pull latest Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@ec2-3-83-24-235.compute-1.amazonaws.com "docker pull ${{ secrets.DOCKER_USERNAME }}/my-laravel-app:latest"

      # Deploy new Laravel container
      - name: Deploy new Laravel container
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@ec2-3-83-24-235.compute-1.amazonaws.com "docker run -d --name laravel-app -p 8000:80 -v /path/to/your/project:/var/www/html ${{ secrets.DOCKER_USERNAME }}/my-laravel-app:latest"

      # Create .env file and run migrations
      - name: Create .env file and run migrations
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@ec2-3-83-24-235.compute-1.amazonaws.com << 'EOF'
            cd /path/to/your/project
            cp .env.example .env
            cat <<EOT >> .env
            APP_KEY=${{ secrets.APP_KEY }}
            DB_HOST=${{ secrets.MYSQL_HOST }}
            DB_DATABASE=${{ secrets.MYSQL_DATABASE }}
            DB_USERNAME=${{ secrets.MYSQL_USER }}
            DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            EOT
            # Install Composer Dependencies
            docker run --rm -v $(pwd):/var/www/html ${{ secrets.DOCKER_USERNAME }}/my-laravel-app composer install --no-interaction --prefer-dist
            # Run migrations
            docker run --rm --env-file .env -v $(pwd):/var/www/html ${{ secrets.DOCKER_USERNAME }}/my-laravel-app php artisan migrate --force
          EOF
